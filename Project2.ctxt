#BlueJ class context
comment0.target=Project2
comment1.params=row\ column
comment1.target=char\ getDownAnswerCharacter(int,\ int)
comment1.text=\ determines\ what\ character\ from\ the\ answers\ to\ the\ down\ clues\ is\ at\ the\ given\ row\ and\ column.\n\ If\ no\ down\ clue\ covers\ the\ coordinates\ indicated,\ a\ '\#'\ symbol\ is\ returned.\n\ If\ the\ user\ hasn't\ provided\ an\ answer\ for\ the\ down\ clue\ at\ the\ coordinates\ indicated,\n\ a\ '_'\ character\ is\ returned.\n
comment10.params=clueNumber
comment10.target=java.lang.String\ getDownClue(int)
comment10.text=returns\ the\ text\ hint\ of\ the\ specified\ down\ clue
comment11.params=clueNumber
comment11.target=java.lang.String\ getAcrossClue(int)
comment11.text=returns\ the\ text\ hint\ of\ the\ specified\ across\ clue
comment12.params=clueNumber
comment12.target=int\ getDownAnswerRow(int)
comment12.text=returns\ the\ row\ of\ the\ specified\ down\ clue
comment13.params=clueNumber
comment13.target=int\ getAcrossAnswerRow(int)
comment13.text=returns\ the\ row\ of\ the\ specified\ across\ clue
comment14.params=clueNumber
comment14.target=int\ getDownAnswerColumn(int)
comment14.text=returns\ the\ column\ of\ the\ specified\ down\ clue
comment15.params=clueNumber
comment15.target=int\ getAcrossAnswerColumn(int)
comment15.text=returns\ the\ column\ of\ the\ specified\ across\ clue
comment16.params=clueNumber
comment16.target=int\ getDownAnswerLength(int)
comment16.text=returns\ the\ length\ of\ the\ specified\ down\ clue's\ answer
comment17.params=clueNumber
comment17.target=int\ getAcrossAnswerLength(int)
comment17.text=returns\ the\ length\ of\ the\ specified\ across\ clue's\ answer
comment18.params=clueNumber
comment18.target=java.lang.String\ getDownAnswer(int)
comment18.text=returns\ the\ answer\ given\ for\ the\ specified\ down\ clue
comment19.params=clueNumber
comment19.target=java.lang.String\ getAcrossAnswer(int)
comment19.text=returns\ the\ answer\ given\ for\ the\ specified\ across\ clue
comment2.params=
comment2.target=void\ printBoard()
comment2.text=\ prints\ out\ each\ character\ from\ the\ board.\ \#'s\ are\ printed\ where\ there\ is\ no\ space\ to\ enter\ an\ answer,\n\ _'s\ are\ printed\ in\ spaces\ where\ an\ answer\ is\ expected\ but\ none\ has\ been\ given\ yet,\ and\ otherwise\n\ the\ character\ from\ the\ user's\ answer\ is\ printed.\n
comment20.params=clueNumber\ answer
comment20.target=void\ setDownAnswer(int,\ java.lang.String)
comment20.text=sets\ the\ user's\ answer\ given\ for\ the\ specified\ down\ clue
comment21.params=clueNumber\ answer
comment21.target=void\ setAcrossAnswer(int,\ java.lang.String)
comment21.text=sets\ the\ user's\ answer\ given\ for\ the\ specified\ across\ clue
comment22.params=num
comment22.target=int\ forceParseInt(java.lang.String)
comment23.params=
comment23.target=void\ injectSolution()
comment3.params=row\ column
comment3.target=char\ getAcrossAnswerCharacter(int,\ int)
comment3.text=\ determines\ what\ character\ from\ the\ answers\ to\ the\ across\ clues\ is\ at\ the\ given\ row\ and\ column.\n\ If\ no\ down\ clue\ covers\ the\ coordinates\ indicated,\ a\ '\#'\ symbol\ is\ returned.\n\ If\ the\ user\ hasn't\ provided\ an\ answer\ for\ the\ down\ clue\ at\ the\ coordinates\ indicated,\n\ a\ '_'\ character\ is\ returned.\n
comment4.params=
comment4.target=boolean\ checkBoard()
comment4.text=determines\ whether\ all\ the\ down\ answers\ are\ compatible\ with\ all\ the\ across\ answers
comment5.params=args
comment5.target=void\ main(java.lang.String[])
comment5.text=runs\ the\ crossword\ application
comment6.params=
comment6.target=int\ getMaximumDownClueNumber()
comment7.params=
comment7.target=int\ getMaximumAcrossClueNumber()
comment8.params=clueNumber
comment8.target=boolean\ acrossClueExists(int)
comment8.text=returns\ true\ if\ an\ across\ clue\ with\ the\ given\ clue\ number\ exists
comment9.params=clueNumber
comment9.target=boolean\ downClueExists(int)
comment9.text=returns\ true\ if\ a\ down\ clue\ with\ the\ given\ clue\ number\ exists
numComments=24
